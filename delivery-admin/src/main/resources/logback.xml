<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">

	<contextName>delivery</contextName>

	<!-- 彩色日志依赖的渲染类 -->
	<conversionRule conversionWord="clr"
					converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
	<conversionRule conversionWord="wex"
					converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
	<conversionRule conversionWord="wEx"
					converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

	<!-- 控制台彩色日志格式 -->
	<property name="CONSOLE_LOG_PATTERN"
			  value="%black(%contextName-) ${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){red} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){cyan} %clr(%-40.40logger{39}){magenta} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

	<!-- 日志文件输出 -->
	<property name="FILE_LOG_PATTERN"
			  value="%black(%contextName-) ${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

	<!-- 日志文件地址 -->
	<property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-/home/delivery/logs}}"/>

	<!-- 日志文件前缀 -->
	<property name="LOG_PREFIX" value="delivery"/>

	<!-- 控制台输出 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
			<charset>utf8</charset>
		</encoder>
	</appender>

	<appender name="INFO_FILE"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
		</encoder>
		<file>${LOG_FILE}/${LOG_PREFIX}-info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 是否在启动时清除存档日志文件 -->
			<cleanHistoryOnStart>${LOG_FILE_CLEAN_HISTORY_ON_START:-false}
			</cleanHistoryOnStart>
			<!-- 过渡日志文件名的模式 -->
			<fileNamePattern>
				${ROLLING_FILE_NAME_PATTERN:-${LOG_FILE}/${LOG_PREFIX}-info-%d{yyyyMMdd}.log.%i.gz}
			</fileNamePattern>
			<!-- 单个日志文件最多 100MB, 30天的日志周期，最大不能超过20GB  -->
			<maxFileSize>${LOG_FILE_MAX_SIZE:-100MB}</maxFileSize>
			<maxHistory>${LOG_FILE_MAX_HISTORY:-30}</maxHistory>
			<totalSizeCap>${LOG_FILE_TOTAL_SIZE_CAP:-20GB}</totalSizeCap>
		</rollingPolicy>
	</appender>

	<appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>

		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
		</encoder>
		<file>${LOG_FILE}/${LOG_PREFIX}-error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 是否在启动时清除存档日志文件 -->
			<cleanHistoryOnStart>${LOG_FILE_CLEAN_HISTORY_ON_START:-false}
			</cleanHistoryOnStart>
			<!-- 过渡日志文件名的模式 -->
			<fileNamePattern>
				${ROLLING_FILE_NAME_PATTERN:-${LOG_FILE}/${LOG_PREFIX}-error-%d{yyyyMMdd}.log.%i.gz}
			</fileNamePattern>
			<!-- 单个日志文件最多 100MB, 30天的日志周期，最大不能超过20GB  -->
			<maxFileSize>${LOG_FILE_MAX_SIZE:-100MB}</maxFileSize>
			<maxHistory>${LOG_FILE_MAX_HISTORY:-30}</maxHistory>
			<totalSizeCap>${LOG_FILE_TOTAL_SIZE_CAP:-20GB}</totalSizeCap>
		</rollingPolicy>
	</appender>

	<root level="INFO">
		<appender-ref ref="CONSOLE"/>
		<appender-ref ref="INFO_FILE"/>
		<appender-ref ref="ERROR_FILE"/>
	</root>


	<logger name="net.sf.ehcache" level="INFO"/>
	<logger name="druid.sql" level="INFO"/>

	<!-- MyBatis log configure -->
	<logger name="com.apache.ibatis" level="INFO"/>
	<logger name="org.mybatis.spring" level="WARN"/>
	<logger name="java.sql.Connection" level="DEBUG"/>
	<logger name="java.sql.Statement" level="DEBUG"/>
	<logger name="java.sql.PreparedStatement" level="DEBUG"/>

	<!-- 减少部分debug日志 -->
	<logger name="org.apache.catalina.startup.DigesterFactory" level="ERROR"/>
	<logger name="org.apache.catalina.util.LifecycleBase" level="ERROR"/>
	<logger name="org.apache.coyote.http11.Http11NioProtocol" level="WARN"/>
	<logger name="org.apache.sshd.common.util.SecurityUtils" level="WARN"/>
	<logger name="org.apache.tomcat.util.net.NioSelectorPool" level="WARN"/>
	<logger name="org.eclipse.jetty.util.component.AbstractLifeCycle" level="ERROR"/>
	<logger name="org.hibernate.validator.internal.util.Version" level="WARN"/>

	<!-- 业务日志 -->
	<Logger name="com.delivery" level="INFO"/>


</configuration>
